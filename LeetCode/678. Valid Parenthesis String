class Solution {
    public boolean checkValidString(String s) {
       Stack<Integer> stack = new Stack<>();
        Stack<Integer> star = new Stack<>();
        int c = 0;
        //)
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            if (ch == '(') {
                stack.push(i);
            } else if (ch == ')') {
                if (!stack.isEmpty())
                    stack.pop();
                else if (!star.isEmpty())
                    star.pop();
                else
                    return false;
            } else if (ch == '*') {
                star.push(i);
            }
        }
        //(
        while (!stack.isEmpty() && !star.isEmpty()) {
            if (stack.peek() < star.peek()) {
                stack.pop();
                star.pop();
            }else
                return false;
        }
        if (stack.isEmpty())
            return true;
        else
            return false;

    }
}
