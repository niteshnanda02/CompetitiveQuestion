class Solution {
    public int[][] kClosest(int[][] points, int K) {
       HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<points.length;i++){
            int c=calc(points[i][0],points[i][1]);
            map.put(i,c);
        }
        int[][] ans=new int[K][2];
        
        List<Map.Entry<Integer,Integer>> l=new ArrayList<>(map.entrySet());
        Collections.sort(l,new Comparator<Map.Entry<Integer,Integer>>(){
           @Override
            public int compare(Map.Entry<Integer,Integer> o1,Map.Entry<Integer,Integer> o2){
                return (o1.getValue()).compareTo(o2.getValue());
            }
        });
        for(int i=0;i<K;i++){
            ans[i][0]=points[l.get(i).getKey()][0];
            
            ans[i][1]=points[l.get(i).getKey()][1];
        }
        
        return ans;
    }
    private int calc(int x,int y){
        int X=(int)Math.pow(x,2);
        int Y=(int)Math.pow(y,2);
        return X+Y;
    }
}
