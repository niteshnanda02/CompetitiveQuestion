class Solution {
   public String reorganizeString(String S) {
        Map<Character,Integer> map=new HashMap<>();
        for(int i=0;i<S.length();i++){
            char ch=S.charAt(i);
            map.put(ch,map.getOrDefault(ch,0)+1);
        }

        char[] ans=new char[S.length()];
        String res="";
        boolean temp=false;
        int i=0;
        Set<Map.Entry<Character,Integer>> entries=map.entrySet();
        int max=0;
        char maxChar='\0';
       
        for(Map.Entry<Character,Integer> entry:entries){
            if(entry.getValue()>(Math.ceil(S.length()/2.0))){
                return res;
            }
            if(max<entry.getValue()){
                max=entry.getValue();
                maxChar=entry.getKey();
            }
        }
        map.put(maxChar,0);
        while(max>0){
            ans[i]=maxChar;

            i+=2;
            if(i>S.length()-1)
               i=1;
            max--;
        }
        for(Map.Entry<Character,Integer> entry:entries){
            
            for(int j=0;j<entry.getValue();j++){
                
                ans[i]=entry.getKey();

                i+=2;
                if(i>S.length()-1)
                    i=1;
            }
        }

        
        return String.valueOf(ans);
    }
}
