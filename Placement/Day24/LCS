class Solution {
    static int[][] dp;
    public int longestCommonSubsequence(String text1, String text2) {
        int n=text1.length(),m=text2.length();
        dp=new int[n+1][m+1];
        for(int[] a:dp){
            Arrays.fill(a,-1);
        }
        return lcs(text1,n,text2,m);
    }
    private int lcs(String t1,int n,String t2,int m){
        if(n==0||m==0)
            return 0;
        if(dp[n][m]!=-1)
            return dp[n][m];
        if(t1.charAt(n-1)==t2.charAt(m-1)){
            return dp[n][m]=1+lcs(t1,n-1,t2,m-1);
        }
        else{
            return dp[n][m]=Math.max(lcs(t1,n-1,t2,m),lcs(t1,n,t2,m-1));
        }
    }
}
