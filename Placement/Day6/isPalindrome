/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head==null||head.next==null)
            return true;
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null&&fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        ListNode rev=reverse(slow);
        boolean temp=true;
        while(rev!=null){
            if(rev.val!=head.val){
                temp=false;
                break;
            }
            rev=rev.next;
            head=head.next;
        }
        return temp;
    }
    private ListNode reverse(ListNode node){
        if(node==null||node.next==null)
            return node;
        ListNode reverseNode=reverse(node.next);
        node.next.next=node;
        node.next=null;
        return reverseNode;
    }
}
